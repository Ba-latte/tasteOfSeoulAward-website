@charset "utf-8";

/* 애니메이션 CSS - ani.css */



/* 움직이는 애니메이션 클래스 - 세로방향 */
.mvc1{
    animation: mvcAni1 3s linear infinite alternate;
}
/* 움직이는 애니메이션 클래스 - 가로방향 */
.mvc2{
    animation: mvcAni2 3s linear infinite alternate;
}


/* 움직이는 원 키프레임 - 세로 */
@keyframes mvcAni1 {
    from{
        transform: translateY(10px);
    }
    to{
        transform: translateY(-10px);
    }
}
/* 움직이는 원 키프레임 - 가로 */
@keyframes mvcAni2 {
    from{
        transform: translateX(10px);
    }
    to{
        transform: translateX(-10px);
    }
}



/* 메인 페이지 회전 키프레임 - 시계방향 */
@keyframes ratation1 {
    from{
        transform: rotate(0deg) translateX(80px) rotate(0deg);
        /*
            [ 주변회전 만들기 ]
        1. 첫번째 rotate : 0deg -> 350deg
            ->중앙 회전 만들기
        2. 위치이동 translateX()
            ->소괄호()안에 준 값만큼 중앙에서 떨어져서, 주변을 도는 효과가 생김
        3. 두번째 rotate : 0deg -> -360deg
            ->반대 회전은 옆으로 이동한 박스에 적용되어, 대상을 세워두고 주변을 두는 효과가 생김
        */
    }
    to{
        transform: rotate(360deg) translateX(80px) rotate(-360deg);
    }
} /* rotation 키프레임 끝 */


/* 메인 페이지 회전 키프레임 - 반시계방향 */
@keyframes ratation2 {
    from{
        transform: rotate(360deg) translateX(200px) rotate(0deg);
        /*
            [ 주변회전 만들기 ]
        1. 첫번째 rotate : 0deg -> 350deg
            ->중앙 회전 만들기
        2. 위치이동 translateX()
            ->소괄호()안에 준 값만큼 중앙에서 떨어져서, 주변을 도는 효과가 생김
        3. 두번째 rotate : 0deg -> -360deg
            ->반대 회전은 옆으로 이동한 박스에 적용되어, 대상을 세워두고 주변을 두는 효과가 생김
        */
    }
    to{
        transform: rotate(0deg) translateX(200px) rotate(-360deg);
    }
} /* rotation 키프레임 끝 */